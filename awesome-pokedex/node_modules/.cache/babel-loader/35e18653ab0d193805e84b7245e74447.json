{"ast":null,"code":"import axios from 'axios';\nvar apiServe = 'https://pokeapi.co/api/v2/pokemon/';\nexport function getPokemon(pokemon, url) {\n  return {\n    type: 'POKEMON_SHOW_LIST',\n    pokemon: pokemon,\n    url: url\n  };\n}\nexport function getImagePokemon(img) {\n  return {\n    type: 'POKEMON_SHOW_IMAGE',\n    img: img\n  };\n}\nexport function getPokemonForName(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_SUCCESS',\n    pokemon: pokemon,\n    name: pokemon.name,\n    img: pokemon.sprites\n  };\n}\nexport function errorPokemonForName(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_ERROR',\n    error: pokemon.error\n  };\n}\nexport function getAllPokemons() {\n  return function (dispatch) {\n    axios.get(apiServe).then(function (response) {\n      var data = response.data.results;\n      dispatch(getPokemon(data));\n      data.map(function (url) {\n        return dispatch(getImagePokemon(url.url));\n      });\n    }).catch(function (error) {\n      dispatch(errorPokemonForName(error));\n    });\n  };\n}\nexport function searchPokemonForName(pokemon) {\n  return function (dispatch) {\n    axios.get(apiServe + pokemon).then(function (response) {\n      dispatch(getPokemonForName(response.data));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\leehm\\Documents\\GitHub\\awesome-pokedex\\awesome-pokedex\\src\\store\\actions\\index.js"],"names":["axios","apiServe","getPokemon","pokemon","url","type","getImagePokemon","img","getPokemonForName","name","sprites","errorPokemonForName","error","getAllPokemons","dispatch","get","then","response","data","results","map","catch","searchPokemonForName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,oCAAjB;AAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,GAA7B,EAAkC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAE,mBADD;AAELF,IAAAA,OAAO,EAAPA,OAFK;AAGLC,IAAAA,GAAG,EAAHA;AAHK,GAAP;AAKD;AAED,OAAO,SAASE,eAAT,CAAyBC,GAAzB,EAA8B;AACnC,SAAO;AACLF,IAAAA,IAAI,EAAE,oBADD;AAELE,IAAAA,GAAG,EAAHA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,iBAAT,CAA2BL,OAA3B,EAAoC;AACzC,SAAO;AACLE,IAAAA,IAAI,EAAE,wBADD;AAELF,IAAAA,OAAO,EAAPA,OAFK;AAGLM,IAAAA,IAAI,EAAEN,OAAO,CAACM,IAHT;AAILF,IAAAA,GAAG,EAAEJ,OAAO,CAACO;AAJR,GAAP;AAMD;AAED,OAAO,SAASC,mBAAT,CAA6BR,OAA7B,EAAsC;AAC3C,SAAO;AACLE,IAAAA,IAAI,EAAE,sBADD;AAELO,IAAAA,KAAK,EAAET,OAAO,CAACS;AAFV,GAAP;AAID;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO,UAACC,QAAD,EAAc;AACnBd,IAAAA,KAAK,CAACe,GAAN,CAAUd,QAAV,EACGe,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,OAA3B;AACAL,MAAAA,QAAQ,CAACZ,UAAU,CAACgB,IAAD,CAAX,CAAR;AACAA,MAAAA,IAAI,CAACE,GAAL,CAAS,UAAAhB,GAAG;AAAA,eAAIU,QAAQ,CAACR,eAAe,CAACF,GAAG,CAACA,GAAL,CAAhB,CAAZ;AAAA,OAAZ;AACD,KALH,EAKKiB,KALL,CAKW,UAACT,KAAD,EAAW;AAClBE,MAAAA,QAAQ,CAACH,mBAAmB,CAACC,KAAD,CAApB,CAAR;AACD,KAPH;AAQD,GATD;AAUD;AAGD,OAAO,SAASU,oBAAT,CAA8BnB,OAA9B,EAAuC;AAC5C,SAAO,UAACW,QAAD,EAAc;AACnBd,IAAAA,KAAK,CAACe,GAAN,CAAUd,QAAQ,GAAGE,OAArB,EAA8Ba,IAA9B,CAAmC,UAACC,QAAD,EAAc;AAC/CH,MAAAA,QAAQ,CAACN,iBAAiB,CAACS,QAAQ,CAACC,IAAV,CAAlB,CAAR;AACD,KAFD;AAGD,GAJD;AAKD","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiServe = 'https://pokeapi.co/api/v2/pokemon/';\r\n\r\nexport function getPokemon(pokemon, url) {\r\n  return {\r\n    type: 'POKEMON_SHOW_LIST',\r\n    pokemon,\r\n    url,\r\n  };\r\n}\r\n\r\nexport function getImagePokemon(img) {\r\n  return {\r\n    type: 'POKEMON_SHOW_IMAGE',\r\n    img,\r\n  }\r\n}\r\n\r\nexport function getPokemonForName(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SEARCH_SUCCESS',\r\n    pokemon,\r\n    name: pokemon.name,\r\n    img: pokemon.sprites,\r\n  };\r\n}\r\n\r\nexport function errorPokemonForName(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SEARCH_ERROR',\r\n    error: pokemon.error,\r\n  };\r\n}\r\n\r\nexport function getAllPokemons() {\r\n  return (dispatch) => {\r\n    axios.get(apiServe)\r\n      .then((response) => {\r\n        const data = response.data.results;\r\n        dispatch(getPokemon(data));\r\n        data.map(url => dispatch(getImagePokemon(url.url)));\r\n      }).catch((error) => {\r\n        dispatch(errorPokemonForName(error));\r\n      });\r\n  };\r\n}\r\n\r\n\r\nexport function searchPokemonForName(pokemon) {\r\n  return (dispatch) => {\r\n    axios.get(apiServe + pokemon).then((response) => {\r\n      dispatch(getPokemonForName(response.data));\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}