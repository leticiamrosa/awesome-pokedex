{"ast":null,"code":"import axios from 'axios';\nvar apiServe = 'https://pokeapi.co/api/v2/pokemon/';\nexport function getPokemon(pokemon) {\n  return {\n    type: 'POKEMON_SHOW_LIST',\n    pokemon: pokemon,\n    url: pokemon.sprites\n  };\n}\nexport function getPokemonForName(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_SUCCESS',\n    pokemon: pokemon,\n    name: pokemon.name,\n    img: pokemon.sprites\n  };\n}\nexport function errorPokemonForName(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_ERROR',\n    error: pokemon.error\n  };\n} // export function getAllPokemons() {\n//   return (dispatch) => {\n//     axios.get(apiServe)\n//       .then((response) => {\n//         dispatch(getPokemon(response.data.results));\n//       }).catch((error) => {\n//         dispatch(errorPokemonForName(error));\n//       });\n//   };\n// }\n\nexport function getAllPokemons() {\n  return function (dispatch) {\n    axios.get(apiServe).then(function (response) {\n      var data = response.data.results;\n      dispatch(getPokemon(data));\n      data.map(function (url) {\n        return (// dispatch(getPokemon(data))\n          console.log(url)\n        );\n      });\n    });\n  };\n}\nexport function searchPokemonForName(pokemon) {\n  return function (dispatch) {\n    axios.get(apiServe + pokemon).then(function (response) {\n      dispatch(getPokemonForName(response.data));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\leehm\\Documents\\GitHub\\awesome-pokedex\\awesome-pokedex\\src\\store\\actions\\index.js"],"names":["axios","apiServe","getPokemon","pokemon","type","url","sprites","getPokemonForName","name","img","errorPokemonForName","error","getAllPokemons","dispatch","get","then","response","data","results","map","console","log","searchPokemonForName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,oCAAjB;AAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAE,mBADD;AAELD,IAAAA,OAAO,EAAPA,OAFK;AAGLE,IAAAA,GAAG,EAAEF,OAAO,CAACG;AAHR,GAAP;AAKD;AAED,OAAO,SAASC,iBAAT,CAA2BJ,OAA3B,EAAoC;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAE,wBADD;AAELD,IAAAA,OAAO,EAAPA,OAFK;AAGLK,IAAAA,IAAI,EAAEL,OAAO,CAACK,IAHT;AAILC,IAAAA,GAAG,EAAEN,OAAO,CAACG;AAJR,GAAP;AAMD;AAED,OAAO,SAASI,mBAAT,CAA6BP,OAA7B,EAAsC;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAE,sBADD;AAELO,IAAAA,KAAK,EAAER,OAAO,CAACQ;AAFV,GAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO,UAACC,QAAD,EAAc;AACnBb,IAAAA,KAAK,CAACc,GAAN,CAAUb,QAAV,EACGc,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,OAA3B;AACAL,MAAAA,QAAQ,CAACX,UAAU,CAACe,IAAD,CAAX,CAAR;AACAA,MAAAA,IAAI,CAACE,GAAL,CAAS,UAAAd,GAAG;AAAA,eACV;AACAe,UAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AAFU;AAAA,OAAZ;AAKD,KATH;AAUD,GAXD;AAYD;AAED,OAAO,SAASiB,oBAAT,CAA8BnB,OAA9B,EAAuC;AAC5C,SAAO,UAACU,QAAD,EAAc;AACnBb,IAAAA,KAAK,CAACc,GAAN,CAAUb,QAAQ,GAAGE,OAArB,EAA8BY,IAA9B,CAAmC,UAACC,QAAD,EAAc;AAC/CH,MAAAA,QAAQ,CAACN,iBAAiB,CAACS,QAAQ,CAACC,IAAV,CAAlB,CAAR;AACD,KAFD;AAGD,GAJD;AAKD","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiServe = 'https://pokeapi.co/api/v2/pokemon/';\r\n\r\nexport function getPokemon(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SHOW_LIST',\r\n    pokemon,\r\n    url: pokemon.sprites,\r\n  };\r\n}\r\n\r\nexport function getPokemonForName(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SEARCH_SUCCESS',\r\n    pokemon,\r\n    name: pokemon.name,\r\n    img: pokemon.sprites,\r\n  };\r\n}\r\n\r\nexport function errorPokemonForName(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SEARCH_ERROR',\r\n    error: pokemon.error,\r\n  };\r\n}\r\n\r\n// export function getAllPokemons() {\r\n//   return (dispatch) => {\r\n//     axios.get(apiServe)\r\n//       .then((response) => {\r\n//         dispatch(getPokemon(response.data.results));\r\n//       }).catch((error) => {\r\n//         dispatch(errorPokemonForName(error));\r\n//       });\r\n//   };\r\n// }\r\n\r\nexport function getAllPokemons() {\r\n  return (dispatch) => {\r\n    axios.get(apiServe)\r\n      .then((response) => {\r\n        const data = response.data.results;\r\n        dispatch(getPokemon(data));\r\n        data.map(url => (\r\n          // dispatch(getPokemon(data))\r\n          console.log(url)\r\n        ))\r\n\r\n      })\r\n  }\r\n}\r\n\r\nexport function searchPokemonForName(pokemon) {\r\n  return (dispatch) => {\r\n    axios.get(apiServe + pokemon).then((response) => {\r\n      dispatch(getPokemonForName(response.data));\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}