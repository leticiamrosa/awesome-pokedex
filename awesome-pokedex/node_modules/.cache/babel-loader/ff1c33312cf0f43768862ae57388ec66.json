{"ast":null,"code":"import axios from 'axios';\nvar apiServe = 'https://pokeapi.co/api/v2/pokemon/';\nvar apiImage = 'http://pokestadium.com/sprites/xy/'; // const offSet = 50;\n\nvar limitNumber = 100;\nvar limit = \"?limit=\".concat(limitNumber);\nvar pokemons = [];\nvar pokemonConfig = [];\nexport function getPokemon(pokemon, image) {\n  return {\n    type: 'GET_POKEMON',\n    pokemon: pokemon,\n    image: image\n  };\n}\nexport function getPokemonError(error) {\n  return {\n    type: 'GET_POKEMON_ERROR',\n    error: error\n  };\n}\nexport function pokemonPagination(limitNumber) {\n  return {\n    type: 'SHOW_PAGINATION',\n    limitNumber: limitNumber\n  };\n}\nexport function updatePokemonPagination() {\n  return function (dispatch) {\n    console.log('estou funcionando');\n    dispatch(pokemonPagination(limitNumber));\n  };\n}\nexport function getAllPokemons() {\n  return function (dispatch) {\n    axios.get(apiServe + limit).then(function (response) {\n      var data = response.data.results;\n      data.map(function (pokemon) {\n        return pokemons.push(pokemon.url);\n      });\n      pokemons.forEach(function (pokemon) {\n        axios.get(pokemon).then(function (res) {\n          var abi = res.data;\n          pokemonConfig.push(abi);\n          pokemonConfig.sort(function (a, b) {\n            return a.id - b.id;\n          });\n          dispatch(getPokemon(pokemonConfig, apiImage));\n        }).catch(function (error) {\n          dispatch(getPokemonError(error));\n        });\n      });\n    }).catch(function (error) {\n      console.error(error);\n      dispatch(getPokemonError(error));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\leehm\\Documents\\GitHub\\awesome-pokedex\\awesome-pokedex\\src\\store\\actions\\getPokemon.js"],"names":["axios","apiServe","apiImage","limitNumber","limit","pokemons","pokemonConfig","getPokemon","pokemon","image","type","getPokemonError","error","pokemonPagination","updatePokemonPagination","dispatch","console","log","getAllPokemons","get","then","response","data","results","map","push","url","forEach","res","abi","sort","a","b","id","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,oCAAjB;AACA,IAAMC,QAAQ,GAAG,oCAAjB,C,CACA;;AACA,IAAMC,WAAW,GAAG,GAApB;AACA,IAAMC,KAAK,oBAAaD,WAAb,CAAX;AACA,IAAME,QAAQ,GAAG,EAAjB;AACA,IAAMC,aAAa,GAAG,EAAtB;AAGA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,KAA7B,EAAoC;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;AAELF,IAAAA,OAAO,EAAPA,OAFK;AAGLC,IAAAA,KAAK,EAALA;AAHK,GAAP;AAKD;AAED,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAE,mBADD;AAELE,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,iBAAT,CAA2BV,WAA3B,EAAwC;AAC7C,SAAO;AACLO,IAAAA,IAAI,EAAE,iBADD;AAELP,IAAAA,WAAW,EAAXA;AAFK,GAAP;AAID;AAED,OAAO,SAASW,uBAAT,GAAmC;AACxC,SAAO,UAACC,QAAD,EAAc;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAF,IAAAA,QAAQ,CAACF,iBAAiB,CAACV,WAAD,CAAlB,CAAR;AACD,GAHD;AAID;AAED,OAAO,SAASe,cAAT,GAA0B;AAC/B,SAAO,UAACH,QAAD,EAAc;AACnBf,IAAAA,KAAK,CAACmB,GAAN,CAAUlB,QAAQ,GAAGG,KAArB,EACGgB,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,OAA3B;AACAD,MAAAA,IAAI,CAACE,GAAL,CAAS,UAAAhB,OAAO;AAAA,eAAIH,QAAQ,CAACoB,IAAT,CAAcjB,OAAO,CAACkB,GAAtB,CAAJ;AAAA,OAAhB;AACArB,MAAAA,QAAQ,CAACsB,OAAT,CAAiB,UAACnB,OAAD,EAAa;AAC5BR,QAAAA,KAAK,CAACmB,GAAN,CAAUX,OAAV,EACGY,IADH,CACQ,UAACQ,GAAD,EAAS;AACb,cAAMC,GAAG,GAAGD,GAAG,CAACN,IAAhB;AACAhB,UAAAA,aAAa,CAACmB,IAAd,CAAmBI,GAAnB;AACAvB,UAAAA,aAAa,CAACwB,IAAd,CAAmB,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAnB;AAAA,WAAnB;AACAlB,UAAAA,QAAQ,CAACR,UAAU,CAACD,aAAD,EAAgBJ,QAAhB,CAAX,CAAR;AACD,SANH,EAMKgC,KANL,CAMW,UAACtB,KAAD,EAAW;AAClBG,UAAAA,QAAQ,CAACJ,eAAe,CAACC,KAAD,CAAhB,CAAR;AACD,SARH;AASD,OAVD;AAWD,KAfH,EAeKsB,KAfL,CAeW,UAACtB,KAAD,EAAW;AAClBI,MAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACAG,MAAAA,QAAQ,CAACJ,eAAe,CAACC,KAAD,CAAhB,CAAR;AACD,KAlBH;AAmBD,GApBD;AAqBD","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiServe = 'https://pokeapi.co/api/v2/pokemon/';\r\nconst apiImage = 'http://pokestadium.com/sprites/xy/';\r\n// const offSet = 50;\r\nconst limitNumber = 100;\r\nconst limit = `?limit=${limitNumber}`;\r\nconst pokemons = [];\r\nconst pokemonConfig = [];\r\n\r\n\r\nexport function getPokemon(pokemon, image) {\r\n  return {\r\n    type: 'GET_POKEMON',\r\n    pokemon,\r\n    image,\r\n  };\r\n}\r\n\r\nexport function getPokemonError(error) {\r\n  return {\r\n    type: 'GET_POKEMON_ERROR',\r\n    error,\r\n  };\r\n}\r\n\r\nexport function pokemonPagination(limitNumber) {\r\n  return {\r\n    type: 'SHOW_PAGINATION',\r\n    limitNumber,\r\n  };\r\n}\r\n\r\nexport function updatePokemonPagination() {\r\n  return (dispatch) => {\r\n    console.log('estou funcionando');\r\n    dispatch(pokemonPagination(limitNumber));\r\n  };\r\n}\r\n\r\nexport function getAllPokemons() {\r\n  return (dispatch) => {\r\n    axios.get(apiServe + limit)\r\n      .then((response) => {\r\n        const data = response.data.results;\r\n        data.map(pokemon => pokemons.push(pokemon.url));\r\n        pokemons.forEach((pokemon) => {\r\n          axios.get(pokemon)\r\n            .then((res) => {\r\n              const abi = res.data;\r\n              pokemonConfig.push(abi);\r\n              pokemonConfig.sort((a, b) => a.id - b.id);\r\n              dispatch(getPokemon(pokemonConfig, apiImage));\r\n            }).catch((error) => {\r\n              dispatch(getPokemonError(error));\r\n            });\r\n        });\r\n      }).catch((error) => {\r\n        console.error(error);\r\n        dispatch(getPokemonError(error));\r\n      });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}