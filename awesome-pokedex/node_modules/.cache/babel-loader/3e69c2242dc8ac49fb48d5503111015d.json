{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\leehm\\\\Documents\\\\GitHub\\\\awesome-pokedex\\\\awesome-pokedex\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\leehm\\\\Documents\\\\GitHub\\\\awesome-pokedex\\\\awesome-pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar apiServe = 'https://pokeapi.co/api/v2/pokemon/';\nvar host = 'https://pokeapi.co/api/v2/';\nexport function getPokemon(pokemon) {\n  return {\n    type: 'POKEMON_SHOW_LIST',\n    pokemon: pokemon\n  };\n}\nexport function getPokemonForName(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_SUCCESS',\n    pokemon: pokemon,\n    name: pokemon.name,\n    img: pokemon.sprites\n  };\n}\nexport function errorPokemonForName(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_ERROR',\n    error: pokemon.error\n  };\n} // export function getAllPokemons() {\n//   return (dispatch) => {\n//     axios.get(apiServe)\n//       .then((response) => {\n//         const data = response.data.results;\n//         dispatch(getPokemon(data));\n//         data.map(url => (\n//           axios.get(url.url)\n//             .then((pokemonUrl) => console.log(pokemonUrl))\n//         ));\n//       }).catch((error) => {\n//         dispatch(errorPokemonForName(error));\n//       });\n//   };\n// }\n// async function getAllPokemons() {\n//   try {\n//     let response = await fetch(`${host}pokemon`);\n//     let data = await response.json();\n//     await Array.from(data.results).map((el) => {\n//       return el.url\n//     }).map(async (el) => {\n//       let response = await fetch(el);\n//       let data = await response.json();\n//       console.log(data)\n//     })\n//   } catch (e) {\n//     console.error(e.message)\n//   }\n// }\n// getAllPokemons();\n\nexport function getAllPokemons() {\n  return function (dispatch) {\n    try {\n      var data = axios.get(\"\".concat(host, \"pokemon\"));\n      data.data.results.map(function (pokemon) {\n        return pokemon.url;\n      }).map(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(pokemon) {\n          var responsePokemon;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  responsePokemon = axios.get(pokemon);\n                  dispatch(getPokemon(responsePokemon));\n                  console.log(responsePokemon.data);\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n}\nexport function searchPokemonForName(pokemon) {\n  return function (dispatch) {\n    axios.get(apiServe + pokemon).then(function (response) {\n      dispatch(getPokemonForName(response.data));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\leehm\\Documents\\GitHub\\awesome-pokedex\\awesome-pokedex\\src\\store\\actions\\index.js"],"names":["axios","apiServe","host","getPokemon","pokemon","type","getPokemonForName","name","img","sprites","errorPokemonForName","error","getAllPokemons","dispatch","data","get","results","map","url","responsePokemon","console","log","e","message","searchPokemonForName","then","response"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,oCAAjB;AACA,IAAMC,IAAI,GAAG,4BAAb;AAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAE,mBADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,iBAAT,CAA2BF,OAA3B,EAAoC;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAE,wBADD;AAELD,IAAAA,OAAO,EAAPA,OAFK;AAGLG,IAAAA,IAAI,EAAEH,OAAO,CAACG,IAHT;AAILC,IAAAA,GAAG,EAAEJ,OAAO,CAACK;AAJR,GAAP;AAMD;AAED,OAAO,SAASC,mBAAT,CAA6BN,OAA7B,EAAsC;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAE,sBADD;AAELM,IAAAA,KAAK,EAAEP,OAAO,CAACO;AAFV,GAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO,UAACC,QAAD,EAAc;AACnB,QAAI;AACF,UAAMC,IAAI,GAAGd,KAAK,CAACe,GAAN,WAAab,IAAb,aAAb;AACAY,MAAAA,IAAI,CAACA,IAAL,CAAUE,OAAV,CAAkBC,GAAlB,CAAsB,UAACb,OAAD,EAAa;AACjC,eAAOA,OAAO,CAACc,GAAf;AACD,OAFD,EAEGD,GAFH;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEO,iBAAOb,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCe,kBAAAA,eADD,GACmBnB,KAAK,CAACe,GAAN,CAAUX,OAAV,CADnB;AAELS,kBAAAA,QAAQ,CAACV,UAAU,CAACgB,eAAD,CAAX,CAAR;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,eAAe,CAACL,IAA5B;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFP;;AAAA;AAAA;AAAA;AAAA;AAOD,KATD,CASE,OAAOQ,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACT,KAAR,CAAcW,CAAC,CAACC,OAAhB;AACD;AACF,GAbD;AAcD;AAED,OAAO,SAASC,oBAAT,CAA8BpB,OAA9B,EAAuC;AAC5C,SAAO,UAACS,QAAD,EAAc;AACnBb,IAAAA,KAAK,CAACe,GAAN,CAAUd,QAAQ,GAAGG,OAArB,EAA8BqB,IAA9B,CAAmC,UAACC,QAAD,EAAc;AAC/Cb,MAAAA,QAAQ,CAACP,iBAAiB,CAACoB,QAAQ,CAACZ,IAAV,CAAlB,CAAR;AACD,KAFD;AAGD,GAJD;AAKD","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiServe = 'https://pokeapi.co/api/v2/pokemon/';\r\nconst host = 'https://pokeapi.co/api/v2/';\r\n\r\nexport function getPokemon(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SHOW_LIST',\r\n    pokemon,\r\n  };\r\n}\r\n\r\nexport function getPokemonForName(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SEARCH_SUCCESS',\r\n    pokemon,\r\n    name: pokemon.name,\r\n    img: pokemon.sprites,\r\n  };\r\n}\r\n\r\nexport function errorPokemonForName(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SEARCH_ERROR',\r\n    error: pokemon.error,\r\n  };\r\n}\r\n\r\n// export function getAllPokemons() {\r\n//   return (dispatch) => {\r\n//     axios.get(apiServe)\r\n//       .then((response) => {\r\n//         const data = response.data.results;\r\n//         dispatch(getPokemon(data));\r\n//         data.map(url => (\r\n//           axios.get(url.url)\r\n//             .then((pokemonUrl) => console.log(pokemonUrl))\r\n//         ));\r\n//       }).catch((error) => {\r\n//         dispatch(errorPokemonForName(error));\r\n//       });\r\n//   };\r\n// }\r\n\r\n// async function getAllPokemons() {\r\n//   try {\r\n//     let response = await fetch(`${host}pokemon`);\r\n//     let data = await response.json();\r\n    \r\n//     await Array.from(data.results).map((el) => {\r\n//       return el.url\r\n//     }).map(async (el) => {\r\n//       let response = await fetch(el);\r\n//       let data = await response.json();\r\n//       console.log(data)\r\n//     })\r\n//   } catch (e) {\r\n//     console.error(e.message)\r\n//   }\r\n// }\r\n\r\n// getAllPokemons();\r\n\r\nexport function getAllPokemons() {\r\n  return (dispatch) => {\r\n    try {\r\n      const data = axios.get(`${host}pokemon`);\r\n      data.data.results.map((pokemon) => {\r\n        return pokemon.url;\r\n      }).map(async (pokemon) => {\r\n        const responsePokemon = axios.get(pokemon);\r\n        dispatch(getPokemon(responsePokemon));\r\n        console.log(responsePokemon.data);\r\n      })\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function searchPokemonForName(pokemon) {\r\n  return (dispatch) => {\r\n    axios.get(apiServe + pokemon).then((response) => {\r\n      dispatch(getPokemonForName(response.data));\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}