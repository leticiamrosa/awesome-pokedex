{"ast":null,"code":"import axios from 'axios';\nvar apiServe = 'https://pokeapi.co/api/v2/pokemon/';\nvar host = 'https://pokeapi.co/api/v2/';\nexport function getPokemon(pokemon) {\n  return {\n    type: 'POKEMON_SHOW_LIST',\n    pokemon: pokemon\n  };\n}\nexport function getPokemonForName(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_SUCCESS',\n    pokemon: pokemon,\n    name: pokemon.name,\n    img: pokemon.sprites\n  };\n}\nexport function errorPokemonForName(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_ERROR',\n    error: pokemon.error\n  };\n} // export function getAllPokemons() {\n//   return (dispatch) => {\n//     axios.get(apiServe)\n//       .then((response) => {\n//         const data = response.data.results;\n//         dispatch(getPokemon(data));\n//         data.map(url => (\n//           axios.get(url.url)\n//             .then((pokemonUrl) => console.log(pokemonUrl))\n//         ));\n//       }).catch((error) => {\n//         dispatch(errorPokemonForName(error));\n//       });\n//   };\n// }\n// export async function getAllPokemons() {\n//   return async (dispatch) => {\n//     try {\n//       const data = await axios.get(`${host}pokemon`);\n//       await data.data.results.map((pokemon) => {\n//         return pokemon.url;\n//       }).map(async (pokemon) => {\n//         const responsePokemon = await axios.get(pokemon);\n//         dispatch(getPokemon(responsePokemon));\n//         console.log(responsePokemon.data);\n//       })\n//     } catch (e) {\n//       console.error(e.message);\n//     }\n//   };\n// }\n\nfunction getAllPokemons() {\n  return function (dispatch) {\n    var data = axios.get(\"\".concat(host, \"pokemon\"));\n    data.then(function (response) {\n      return console.log(response);\n    });\n  };\n}\n\ngetAllPokemons();\nexport function searchPokemonForName(pokemon) {\n  return function (dispatch) {\n    axios.get(apiServe + pokemon).then(function (response) {\n      dispatch(getPokemonForName(response.data));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\leehm\\Documents\\GitHub\\awesome-pokedex\\awesome-pokedex\\src\\store\\actions\\index.js"],"names":["axios","apiServe","host","getPokemon","pokemon","type","getPokemonForName","name","img","sprites","errorPokemonForName","error","getAllPokemons","dispatch","data","get","then","response","console","log","searchPokemonForName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,oCAAjB;AACA,IAAMC,IAAI,GAAG,4BAAb;AAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAE,mBADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,iBAAT,CAA2BF,OAA3B,EAAoC;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAE,wBADD;AAELD,IAAAA,OAAO,EAAPA,OAFK;AAGLG,IAAAA,IAAI,EAAEH,OAAO,CAACG,IAHT;AAILC,IAAAA,GAAG,EAAEJ,OAAO,CAACK;AAJR,GAAP;AAMD;AAED,OAAO,SAASC,mBAAT,CAA6BN,OAA7B,EAAsC;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAE,sBADD;AAELM,IAAAA,KAAK,EAAEP,OAAO,CAACO;AAFV,GAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,cAAT,GAA0B;AACxB,SAAO,UAACC,QAAD,EAAc;AACnB,QAAMC,IAAI,GAAGd,KAAK,CAACe,GAAN,WAAab,IAAb,aAAb;AACAY,IAAAA,IAAI,CAACE,IAAL,CAAU,UAACC,QAAD;AAAA,aAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAd;AAAA,KAAV;AACD,GAHD;AAID;;AAEDL,cAAc;AAGd,OAAO,SAASQ,oBAAT,CAA8BhB,OAA9B,EAAuC;AAC5C,SAAO,UAACS,QAAD,EAAc;AACnBb,IAAAA,KAAK,CAACe,GAAN,CAAUd,QAAQ,GAAGG,OAArB,EAA8BY,IAA9B,CAAmC,UAACC,QAAD,EAAc;AAC/CJ,MAAAA,QAAQ,CAACP,iBAAiB,CAACW,QAAQ,CAACH,IAAV,CAAlB,CAAR;AACD,KAFD;AAGD,GAJD;AAKD","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiServe = 'https://pokeapi.co/api/v2/pokemon/';\r\nconst host = 'https://pokeapi.co/api/v2/';\r\n\r\nexport function getPokemon(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SHOW_LIST',\r\n    pokemon,\r\n  };\r\n}\r\n\r\nexport function getPokemonForName(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SEARCH_SUCCESS',\r\n    pokemon,\r\n    name: pokemon.name,\r\n    img: pokemon.sprites,\r\n  };\r\n}\r\n\r\nexport function errorPokemonForName(pokemon) {\r\n  return {\r\n    type: 'POKEMON_SEARCH_ERROR',\r\n    error: pokemon.error,\r\n  };\r\n}\r\n\r\n// export function getAllPokemons() {\r\n//   return (dispatch) => {\r\n//     axios.get(apiServe)\r\n//       .then((response) => {\r\n//         const data = response.data.results;\r\n//         dispatch(getPokemon(data));\r\n//         data.map(url => (\r\n//           axios.get(url.url)\r\n//             .then((pokemonUrl) => console.log(pokemonUrl))\r\n//         ));\r\n//       }).catch((error) => {\r\n//         dispatch(errorPokemonForName(error));\r\n//       });\r\n//   };\r\n// }\r\n\r\n\r\n// export async function getAllPokemons() {\r\n//   return async (dispatch) => {\r\n//     try {\r\n//       const data = await axios.get(`${host}pokemon`);\r\n//       await data.data.results.map((pokemon) => {\r\n//         return pokemon.url;\r\n//       }).map(async (pokemon) => {\r\n//         const responsePokemon = await axios.get(pokemon);\r\n//         dispatch(getPokemon(responsePokemon));\r\n//         console.log(responsePokemon.data);\r\n//       })\r\n//     } catch (e) {\r\n//       console.error(e.message);\r\n//     }\r\n//   };\r\n// }\r\n\r\nfunction getAllPokemons() {\r\n  return (dispatch) => {\r\n    const data = axios.get(`${host}pokemon`);\r\n    data.then((response) => console.log(response))\r\n  }\r\n}\r\n\r\ngetAllPokemons();\r\n\r\n\r\nexport function searchPokemonForName(pokemon) {\r\n  return (dispatch) => {\r\n    axios.get(apiServe + pokemon).then((response) => {\r\n      dispatch(getPokemonForName(response.data));\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}