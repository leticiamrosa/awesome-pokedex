{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\leehm\\\\Documents\\\\GitHub\\\\awesome-pokedex\\\\awesome-pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport searchPokemon from '../Search/index';\nvar apiServer = 'https://pokeapi.co/api/v2/pokemon/'; // export const pokemonSearch = (payload = null) => ({\n//   type: 'POKEMON_SEARCH',\n//   payload: payload\n// })\n// export const searchAction = pokemon => {\n//   return axios.get(apiServer + pokemon).then(response => {\n//     return pokemonSearch(response.data);\n//   })\n//   .catch(e => {\n//     return console.log(e);\n//   })\n// }\n\nvar searchPokemonsSuccess = function searchPokemonsSuccess(pokemon) {\n  return {\n    type: 'POKEMON_SEARCH_SUCCESS',\n    payload: _objectSpread({}, pokemon)\n  };\n};\n\nvar searchPokemonStarted = function searchPokemonStarted() {\n  return {\n    type: 'POKEMON_SEARCH_STARTED'\n  };\n};\n\nvar searchPokemonError = function searchPokemonError(error) {\n  return {\n    type: 'POKEMON_SEARCH_ERROR',\n    payload: {\n      error: error\n    }\n  };\n};\n\nexport var pokemonSearch = function pokemonSearch() {\n  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return function (dispatch) {\n    dispatch(searchPokemon());\n    axios.get(apiServer + pokemon, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\leehm\\Documents\\GitHub\\awesome-pokedex\\awesome-pokedex\\src\\store\\actions\\Search\\actions.js"],"names":["axios","searchPokemon","apiServer","searchPokemonsSuccess","pokemon","type","payload","searchPokemonStarted","searchPokemonError","error","pokemonSearch","dispatch","get","headers","then","response","console","log","catch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAMC,SAAS,GAAG,oCAAlB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,OAAO;AAAA,SAAK;AACxCC,IAAAA,IAAI,EAAE,wBADkC;AAExCC,IAAAA,OAAO,oBACFF,OADE;AAFiC,GAAL;AAAA,CAArC;;AAOA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAO;AAClCF,IAAAA,IAAI,EAAE;AAD4B,GAAP;AAAA,CAA7B;;AAIA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK;AAAA,SAAK;AACnCJ,IAAAA,IAAI,EAAE,sBAD6B;AAEnCC,IAAAA,OAAO,EAAE;AACPG,MAAAA,KAAK,EAALA;AADO;AAF0B,GAAL;AAAA,CAAhC;;AAOA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAoB;AAAA,MAAnBJ,OAAmB,uEAAT,IAAS;AAC/C,SAAO,UAAAK,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACV,aAAa,EAAd,CAAR;AAEAD,IAAAA,KAAK,CAACY,GAAN,CAAUV,SAAS,GAAGE,OAAtB,EAA+B;AAC7BS,MAAAA,OAAO,EAAE;AACP,uCAA+B;AADxB;AADoB,KAA/B,EAIGC,IAJH,CAIQ,UAACC,QAAD,EAAc;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAND,EAMGG,KANH,CAMS,UAACT,KAAD,EAAW;AAClBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,KARD;AASD,GAZD;AAaD,CAdM","sourcesContent":["import axios from 'axios';\r\nimport searchPokemon from '../Search/index';\r\n\r\nconst apiServer = 'https://pokeapi.co/api/v2/pokemon/';\r\n\r\n// export const pokemonSearch = (payload = null) => ({\r\n//   type: 'POKEMON_SEARCH',\r\n//   payload: payload\r\n// })\r\n\r\n// export const searchAction = pokemon => {\r\n//   return axios.get(apiServer + pokemon).then(response => {\r\n//     return pokemonSearch(response.data);\r\n//   })\r\n//   .catch(e => {\r\n//     return console.log(e);\r\n//   })\r\n// }\r\n\r\nconst searchPokemonsSuccess = pokemon => ({\r\n  type: 'POKEMON_SEARCH_SUCCESS',\r\n  payload: {\r\n    ...pokemon\r\n  }\r\n});\r\n\r\nconst searchPokemonStarted = () => ({\r\n  type: 'POKEMON_SEARCH_STARTED'\r\n});\r\n\r\nconst searchPokemonError = error => ({\r\n  type: 'POKEMON_SEARCH_ERROR',\r\n  payload: {\r\n    error\r\n  }\r\n});\r\n\r\nexport const pokemonSearch = (payload = null) => {\r\n  return dispatch => {\r\n    dispatch(searchPokemon());\r\n\r\n    axios.get(apiServer + pokemon, {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      }\r\n    }).then((response) => {\r\n      console.log(response);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}